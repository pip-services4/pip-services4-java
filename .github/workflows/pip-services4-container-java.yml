name: Pip.Services Container Java Delivery

# Configure trigger rules
on: 
  push:
    branches:
      - main
    paths:
    - 'pip-services4-container-java/**'
    - '!pip-services4-container-java/README.md'
  workflow_dispatch:

env:
  IS_MONOREPO: true
  
jobs:
  # Setup job
  setup:
    runs-on: ubuntu-22.04
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"

    steps:
    - name: Checkout source code
      uses: actions/checkout@main

    - name: Pull delivery scripts
      shell: bash
      run: |
        rm -rf pip-services4-container-java/script-delivery-ps
        git clone ${{ secrets.SCRIPTS_DELIVERY_PS_GIT_URL }} eic-templates-cicd-ps
        cp -r eic-templates-cicd-ps/script-delivery-ps pip-services4-container-java/script-delivery-ps

    - name: Execute increment script
      shell: bash
      run: pip-services4-container-java/script-delivery-ps/setup/increment/increment.ps1

    - name: Execute prerequisites script
      shell: bash
      run: pip-services4-container-java/script-delivery-ps/setup/prereqs/prereqs.ps1

    - name: Cache intermediate data
      uses: actions/cache@v3
      with:
        path: |
          pip-services4-container-java/script-delivery-ps
          pip-services4-container-java/component*.json
        key: delivery-${{ github.run_id }}-${{ github.run_attempt }}

  # Authoring job
  authoring:
    needs: setup
    runs-on: ubuntu-22.04

    steps:
    - name: Setup JDK 18.0.1 and maven 3.8.5
      uses: s4u/setup-maven-action@v1.2.1
      with:
        java-version: 18.0.1
        maven-version: 3.8.5

    - name: Checkout source code
      uses: actions/checkout@main

    - name: Get cached intermediate data
      uses: actions/cache@v3
      with:
        path: |
          pip-services4-container-java/script-delivery-ps
          pip-services4-container-java/component*.json
        key: delivery-${{ github.run_id }}-${{ github.run_attempt }}

    - name: Execute build script
      shell: bash
      run: pip-services4-container-java/script-delivery-ps/authoring/build/build.ps1

    - name: Execute test script
      shell: bash
      run: pip-services4-container-java/script-delivery-ps/authoring/test/test.ps1

    - name: Execute package script
      shell: bash
      run: pip-services4-container-java/script-delivery-ps/authoring/package/package.ps1

    - name: Execute publish script
      shell: bash
      run: pip-services4-container-java/script-delivery-ps/authoring/publish/publish.ps1
      env:
        GPG_KEYNAME: ${{ secrets.GPG_KEYNAME }}
        GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        M2_USER: ${{ secrets.M2_USER }}
        M2_PASS: ${{ secrets.M2_PASS }}

    - name: Execute tag script
      shell: bash
      run: pip-services4-container-java/script-delivery-ps/authoring/tag/tag.ps1

    - name: Execute clean script
      if: always()
      shell: bash
      run: pip-services4-container-java/script-delivery-ps/authoring/clean/clean.ps1

  # Measure job
  measure:
    needs: authoring
    if: always()
    runs-on: ubuntu-22.04

    steps: 
    - name: Get cached intermediate data
      uses: actions/cache@v3
      with:
        path: |
          pip-services4-container-java/script-delivery-ps
          pip-services4-container-java/component*.json
        key: delivery-${{ github.run_id }}-${{ github.run_attempt }}

    - name: Execute measure script
      env:
        name: $(echo '${{ github.repository }}' | awk -F '/' '{print $2}')
      run: pip-services4-container-java/script-delivery-ps/measure/measure.ps1 ${{ github.repository_owner }} ${{ env.name }} ${{ secrets.AWS_ACCESS_KEY_ID }} ${{ secrets.AWS_SECRET_ACCESS_KEY }} ${{ secrets.AWS_S3_BUCKET }} ${{ secrets.AWS_S3_BUCKET_FOLDER }} ${{ secrets.GITHUB_TOKEN }}
      shell: bash
